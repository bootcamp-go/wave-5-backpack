1. Cuantos colecciones tiene la base de datos?
1
2. Cuantos documentos hay en cada coleccion? cuanto pesa cada coleccion?
25359
3. Cuantos indices en cada coleccion? cuanto espacio ocupan los indices de cada coleccion?
1 "_id" y ocupa 4.1KB
4. Traer un documento de ejemplo de cada coleccion. db.collection.find(...).pretty() nos da un formato mas legible.
{ _id: ObjectId("5eb3d668b31de5d588f4294f"),
  direccion: 
   { edificio: '625',
     coord: [ -73.990494, 40.7569545 ],
     calle: '8 Avenue',
     codigo_postal: '10018' },
  barrio: 'Manhattan',
  tipo_cocina: 'American',
  grados: 
   [ { date: 2014-06-09T00:00:00.000Z, grado: 'A', puntaje: 12 },
     { date: 2014-01-10T00:00:00.000Z, grado: 'A', puntaje: 9 },
     { date: 2012-12-07T00:00:00.000Z, grado: 'A', puntaje: 4 },
     { date: 2011-12-13T00:00:00.000Z, grado: 'A', puntaje: 9 },
     { date: 2011-09-09T00:00:00.000Z, grado: 'A', puntaje: 13 } ],
  nombre: 'Cafe Metro',
  restaurante_id: '40363298' }

5. para cada coleccion, listar los campos a nivel raiz (ignorar campos dentro de documentos anidados) y sus tipos de datos

direccion
barrio
tipo_cocina
grados
nombre
restaurante_id

Ejercicio 1:SQL

1. Devolver restaurante_id,nombre,barrio y tipo_cocina pero excluyendo _id para un documento (el primero)
db.restaurantes.findOne(
    {},
    {restaurante_id:1, nombre: 1, barrio:1, tipo_cocina: 1, _id:0}
)

{ barrio: 'Manhattan',
  tipo_cocina: 'American',
  nombre: 'Cafe Metro',
  restaurante_id: '40363298' }


2. Devolver restaurante_id,nombre,barrio y tipo_cocina para los primeros 3 restaurantes que contengan 'Bake' en alguna parte de su nombre
db.restaurantes.find(
    {nombre: /Bake/ },
    {restaurante_id:1, nombre:1, barrio:1, tipo_cocina:1}
).limit(3)

{ _id: ObjectId("5eb3d668b31de5d588f42a67"),
  barrio: 'Staten Island',
  tipo_cocina: 'American',
  nombre: 'Perkins Family Restaurant & Bakery',
  restaurante_id: '40370910' }
{ _id: ObjectId("5eb3d668b31de5d588f42aea"),
  barrio: 'Queens',
  tipo_cocina: 'Caribbean',
  nombre: 'Western Bakery',
  restaurante_id: '40377560' }
{ _id: ObjectId("5eb3d668b31de5d588f4292e"),
  barrio: 'Bronx',
  tipo_cocina: 'Bakery',
  nombre: 'Morris Park Bake Shop',
  restaurante_id: '30075445' }

3. Contar los restaurantes de comida (tipo_cocina) china (chinese) o tailandesa (thai) del barrio (barrio) Bronx
db.restaurantes.countDocuments(
    {tipo_cocina:{ $in: ["Chinese", "Thai"]}, barrio:"Bronx"}
)

325

Ejercicio 2:NoSQL
1. traer 3 restaurantes que hayan recibido al menos una calificacion de grado 'A' con puntaje mayor a 20. Una misma calificacion debe cumplir con ambas condiciones simultaneamente
db.restaurantes.find(
    {grados: { $elemMatch:{grado: "A", puntaje: { $gt:20}}}}
).limit(3)

{ _id: ObjectId("5eb3d668b31de5d588f42eec"),
  direccion: 
   { edificio: '107-23',
     coord: [ -73.834012, 40.683833 ],
     calle: 'Liberty Avenue',
     codigo_postal: '11417' },
  barrio: 'Queens',
  tipo_cocina: 'Caribbean',
  grados: 
   [ { date: 2014-03-29T00:00:00.000Z, grado: 'A', puntaje: 27 },
     { date: 2013-06-12T00:00:00.000Z, grado: 'A', puntaje: 12 },
     { date: 2012-05-10T00:00:00.000Z, grado: 'A', puntaje: 13 },
     { date: 2011-12-29T00:00:00.000Z, grado: 'A', puntaje: 13 } ],
  nombre: 'Gemini\'S Lounge',
  restaurante_id: '40511696' }
{ _id: ObjectId("5eb3d668b31de5d588f42fb1"),
  direccion: 
   { edificio: '892',
     coord: [ -73.92434209999999, 40.8281502 ],
     calle: 'Gerard Avenue',
     codigo_postal: '10452' },
  barrio: 'Bronx',
  tipo_cocina: 'Caribbean',
  grados: 
   [ { date: 2014-10-15T00:00:00.000Z, grado: 'A', puntaje: 21 },
     { date: 2014-05-09T00:00:00.000Z, grado: 'A', puntaje: 4 },
     { date: 2013-10-28T00:00:00.000Z, grado: 'A', puntaje: 13 },
     { date: 2013-05-29T00:00:00.000Z, grado: 'A', puntaje: 13 },
     { date: 2012-04-30T00:00:00.000Z, grado: 'A', puntaje: 11 },
     { date: 2011-12-13T00:00:00.000Z, grado: 'B', puntaje: 15 } ],
  nombre: 'Feeding Tree Style West Indian Restaurant',
  restaurante_id: '40541088' }
{ _id: ObjectId("5eb3d668b31de5d588f43f43"),
  direccion: 
   { edificio: '145',
     coord: [ -73.9805339, 40.7629624 ],
     calle: 'West   53 Street',
     codigo_postal: '10019' },
  barrio: 'Manhattan',
  tipo_cocina: 'Italian',
  grados: 
   [ { date: 2014-06-18T00:00:00.000Z, grado: 'A', puntaje: 13 },
     { date: 2013-06-24T00:00:00.000Z, grado: 'A', puntaje: 10 },
     { date: 2013-01-16T00:00:00.000Z, grado: 'B', puntaje: 21 },
     { date: 2012-07-03T00:00:00.000Z, grado: 'B', puntaje: 21 },
     { date: 2012-01-11T00:00:00.000Z, grado: 'A', puntaje: 24 } ],
  nombre: 'Remi',
  restaurante_id: '41118090' }

2. a cuantos documentos les faltan las coordenadas geograficas? en otras palabras, revisar si el tamano de direccion.coords es 0 y Contar
db.restaurantes.countDocuments(
    {"direccion.coord":{$size:0}}
)
2

3. Devolver nombre,barrio,tipo_cocina y grados para los primeros 3 restaurantes; de cada documento solo la ultima calificacion.
db.restaurantes.find(
    {},
    {nombre:1, barrio:1, tipo_cocina:1, grados: { $slice:-1}}
)limit(3)

{ _id: ObjectId("5eb3d668b31de5d588f4294f"),
  barrio: 'Manhattan',
  tipo_cocina: 'American',
  grados: [ { date: 2011-09-09T00:00:00.000Z, grado: 'A', puntaje: 13 } ],
  nombre: 'Cafe Metro' }
{ _id: ObjectId("5eb3d668b31de5d588f42930"),
  barrio: 'Queens',
  tipo_cocina: 'American',
  grados: [ { date: 2012-02-10T00:00:00.000Z, grado: 'A', puntaje: 13 } ],
  nombre: 'Brunos On The Boulevard' }
{ _id: ObjectId("5eb3d668b31de5d588f42955"),
  barrio: 'Manhattan',
  tipo_cocina: 'Pizza',
  grados: [ { date: 2011-09-26T00:00:00.000Z, grado: 'A', puntaje: 0 } ],
  nombre: 'Domino\'S Pizza' }
