definitions:
  handler.patchrequest:
    properties:
      apellido:
        type: string
      edad:
        type: integer
    type: object
  handler.putrequest:
    properties:
      activo:
        type: boolean
      altura:
        type: number
      apellido:
        type: string
      edad:
        type: integer
      email:
        type: string
      nombre:
        type: string
    required:
    - activo
    - altura
    - apellido
    - edad
    - email
    - nombre
    type: object
  handler.request:
    properties:
      activo:
        type: boolean
      altura:
        type: number
      apellido:
        type: string
      edad:
        type: integer
      email:
        type: string
      nombre:
        type: string
    required:
    - apellido
    - email
    - nombre
    type: object
  web.Response:
    properties:
      code:
        type: string
      data: {}
      error: {}
    type: object
info:
  contact:
    name: SoporteMACN
    url: https://go.dev/blog/
  description: Api para gestionar usuarios
  license:
    name: Apache 2.0
    url: http://www.apache.orh/licenses/LICENSE-2.0.html
  termsOfService: https://go.dev/tos
  title: API Usuarios Bootcamp MACN
  version: "1.0"
paths:
  /users:
    get:
      consumes:
      - application/json
      description: Obtiene todos los usuarios que no estan borrados
      parameters:
      - description: token
        in: header
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/web.Response'
      summary: Obtiene todos los usuarios
      tags:
      - Usuarios
    post:
      consumes:
      - application/json
      description: Guarda un usuario
      parameters:
      - description: token
        in: header
        name: token
        required: true
        type: string
      - description: User to store
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/handler.request'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/web.Response'
      summary: Guarda un usuario
      tags:
      - Usuarios
    put:
      consumes:
      - application/json
      description: Actualiza toda la información de un usuario
      parameters:
      - description: token
        in: header
        name: token
        required: true
        type: string
      - description: User to update
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/handler.putrequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/web.Response'
      summary: Actualiza un usuario
      tags:
      - Usuarios
  /users/{id}:
    delete:
      consumes:
      - application/json
      description: Borra un usuario por su id
      parameters:
      - description: token
        in: header
        name: token
        required: true
        type: string
      - description: Delete user by id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/web.Response'
      summary: Borra un usuario
      tags:
      - Usuarios
    get:
      consumes:
      - application/json
      description: Obtiene un usuario por su id que no este borrado
      parameters:
      - description: token
        in: header
        name: token
        required: true
        type: string
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/web.Response'
      summary: Obtieneun usuario por id
      tags:
      - Usuarios
    patch:
      consumes:
      - application/json
      description: Actualiza el apellido y edad de un usuario
      parameters:
      - description: token
        in: header
        name: token
        required: true
        type: string
      - description: Update user by id
        in: path
        name: id
        required: true
        type: integer
      - description: User to update
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/handler.patchrequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/web.Response'
      summary: Actualiza parcialmente un usuario
      tags:
      - Usuarios
  /users/search:
    get:
      consumes:
      - application/json
      description: Busca usuarios por algun criterio de búsqueda
      parameters:
      - description: token
        in: header
        name: token
        required: true
        type: string
      - description: Nombre
        in: query
        name: nombre
        type: string
      - description: Apellido
        in: query
        name: apellido
        type: string
      - description: Email
        in: query
        name: email
        type: string
      - description: Edad
        in: query
        name: edad
        type: string
      - description: Altura
        in: query
        name: altura
        type: string
      - description: Activo
        in: query
        name: activo
        type: string
      - description: Fecha de creación
        in: query
        name: fecha_creacion
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/web.Response'
      summary: Busca usuarios
      tags:
      - Usuarios
swagger: "2.0"
