definitions:
  handler.Request:
    properties:
      activo:
        type: boolean
      altura:
        type: number
      apellido:
        type: string
      edad:
        type: integer
      email:
        type: string
      fechaCreacion:
        type: string
      nombre:
        type: string
    required:
    - activo
    - altura
    - apellido
    - edad
    - email
    - fechaCreacion
    - nombre
    type: object
  handler.RequestPatch:
    properties:
      apellido:
        type: string
      edad:
        type: integer
    required:
    - apellido
    - edad
    type: object
  web.Response:
    properties:
      code:
        type: integer
      data: {}
      error:
        type: string
    type: object
info:
  contact: {}
  description: esta API maneja la informacion de usuarios
  title: MELI Bootcamp API usuarios
  version: "1.0"
paths:
  /users:
    get:
      consumes:
      - application/json
      description: Return all users from the DB
      parameters:
      - description: token
        in: header
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/web.Response'
      summary: Return all users
      tags:
      - Users
    post:
      consumes:
      - application/json
      description: Create a new user in the database
      parameters:
      - description: token
        in: header
        name: token
        required: true
        type: string
      - description: User to store
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/handler.Request'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/web.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/web.Response'
      summary: Create user
      tags:
      - Users
  /users/{id}:
    delete:
      consumes:
      - application/json
      description: Delete user by ID
      parameters:
      - description: token
        in: header
        name: token
        required: true
        type: string
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/web.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/web.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/web.Response'
      summary: Delete user
      tags:
      - Users
    get:
      consumes:
      - application/json
      description: Returns a single user
      parameters:
      - description: token
        in: header
        name: token
        required: true
        type: string
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/web.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/web.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/web.Response'
      summary: Find user by ID
      tags:
      - Users
    patch:
      consumes:
      - application/json
      description: You can only update the last name and age field
      parameters:
      - description: token
        in: header
        name: token
        required: true
        type: string
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: User to update
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/handler.RequestPatch'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/web.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/web.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/web.Response'
      summary: Update an existing user
      tags:
      - Users
    put:
      consumes:
      - application/json
      parameters:
      - description: token
        in: header
        name: token
        required: true
        type: string
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: User to update
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/handler.Request'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/web.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/web.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/web.Response'
      summary: Update an existing user
      tags:
      - Users
swagger: "2.0"
